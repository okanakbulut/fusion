[project]
name = "fusion"
version = "0.1.0"
description = "Fusion is a web framework for building APIs with Python."
readme = "README.md"
requires-python = ">=3.12"

dependencies = ["msgspec==0.18.5", "starlette==0.34.0"]

[project.optional-dependencies]
dev = [
    "coverage[toml]>=6.5",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pre-commit==3.6.0",
    "ruff==0.1.8",
    "commitizen==3.13.0",
    "ipython",
    "httpx",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"


[tool.ruff]
line-length = 100
indent-width = 4
tab-size = 4
target-version = "py312"
src = ["src", "tests"]
unfixable = ["F401"]


[tool.ruff.lint]
fixable = ["ALL"]
extend-select = ["C90", "I", "F", "E", "ASYNC"]
extend-ignore = ["F401"]

[tool.ruff.per-file-ignores]
"**/__init__.py" = ["F401"]
"**/tests/**" = ["D101", "D102", "D103", "F", "E501"]
"**/tests/sql/**" = ["E501"]


[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
# Flag errors (`C901`) whenever the complexity level exceeds 10.
max-complexity = 10


[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version_scheme = "semver"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true

[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
    "--doctest-modules",
    "--quiet",
    "--tb=long",
]
testpaths = ["tests", "src/fusion"]

[tool.coverage.run]
branch = true
omit = ["src/fusion/protocols.py", "tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if self.debug",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]
fail_under = 100
show_missing = true
skip_covered = true

[tool.pyright]
venvPath = "/Users/okanakbulut/.virtualenvs"
venv = "fusion"
pythonVersion = "3.12"
exclude = ["**/__init__.py", "**/__pycache__"]
